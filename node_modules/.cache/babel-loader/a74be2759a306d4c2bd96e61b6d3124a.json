{"ast":null,"code":"/* // src/context/Provider.js\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport CarsContext from './CarsContext';\n\nclass Provider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cars: {\n        red: false,\n        blue: false,\n        yellow: false,\n      },\n    }\n    this.moveCar = this.moveCar.bind(this);\n  }\n\n  moveCar(car, side) {\n    this.setState({\n      cars: {\n        ...this.state.cars,\n        [car]: side,\n      },\n    });\n  };\n\n  render() {\n    const context = {\n      ...this.state,\n      moveCar: this.moveCar,\n    };\n\n    const { children } = this.props;\n\n    return (\n      <CarsContext.Provider value={context}>\n        {children}\n      </CarsContext.Provider>\n    );\n  }\n};\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n */","map":{"version":3,"sources":["/home/lennon/Documentos/Programação/Bloco_19 Context API/dia_2/hooks/exercise-react-hooks-refactoring/src/context/Provider.js"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["/* // src/context/Provider.js\n\nimport PropTypes from 'prop-types';\nimport React, { Component } from 'react';\nimport CarsContext from './CarsContext';\n\nclass Provider extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cars: {\n        red: false,\n        blue: false,\n        yellow: false,\n      },\n    }\n    this.moveCar = this.moveCar.bind(this);\n  }\n\n  moveCar(car, side) {\n    this.setState({\n      cars: {\n        ...this.state.cars,\n        [car]: side,\n      },\n    });\n  };\n\n  render() {\n    const context = {\n      ...this.state,\n      moveCar: this.moveCar,\n    };\n\n    const { children } = this.props;\n\n    return (\n      <CarsContext.Provider value={context}>\n        {children}\n      </CarsContext.Provider>\n    );\n  }\n};\n\nProvider.propTypes = {\n  children: PropTypes.node.isRequired,\n};\n\nexport default Provider;\n */"]},"metadata":{},"sourceType":"module"}